// HomeWork

// Задача 1: Задайте значения M и N. Напишите программу, которая выведет все натуральные числа в промежутке от M до N. Использовать рекурсию, не использовать циклы.






// Задача 2: Напишите программу вычисления функции Аккермана с помощью рекурсии. Даны два неотрицательных числа m и n.

// Задача 3: Задайте произвольный массив. Выведете его элементы, начиная с конца. Использовать рекурсию, не использовать циклы.













// Рекурсия - вызов метода внутри метода
// Факториал - произ-е чисел от 1 до N включительно 
// N -> 1; 4 * 3 * 2 * 1 = 24; N = 4

// int FindFactorial (int n)
// {
//     // Базовый случай - случай остановки рекурсии
//     if (n == 1) return 1;
//     // Рекурсивный случай - случай вызова метода внутри метода
//     return n * FindFactorial(n - 1);
// }
// Console.WriteLine(FindFactorial(5)); // n = 5
// // 5 * 4 * 3 * 2 * 1 = 120

// Напишите программу, которая будет принимать 
// на вход число и  возвращать сумму его цифр.
// Пример
// 123 => 6 (1+2+3 = 6)
// 63 => 9

// int SumOfDigits (int number)
// {
//     // Базовый случай
//     if (number == 0) return 0; // 3 + 6 + 0 = 9
//     int result = number % 10 + SumOfDigits(number / 10);
//     return result;
// }

// Console.WriteLine(SumOfDigits(63));

// Задайте значение N. Напишите программу, которая выведет
// все натуральные числа в промежутке от 1 до N.
// Указание
// Использовать рекурсию. Не использовать цикл.
// Пример
// N=5 => 1 2 3 4 5
// // start=1, end=N
// void ShowNumbers(int start, int end)
// {
//     if (start == end)  // 1 2 3 4 5
//     {
//         Console.Write(start);
//         return;
//     }
//     Console.Write(start + " ");// "привет" + "2" = "привет2"
//     ShowNumbers(start + 1, end);
// }
// ShowNumbers(1, 5); // start = 1, end = 5
